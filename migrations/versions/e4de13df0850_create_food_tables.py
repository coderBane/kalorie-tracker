"""create food tables

Revision ID: e4de13df0850
Revises: 
Create Date: 2025-05-22 17:37:48.925232

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes

from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e4de13df0850'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('food_category',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_utc', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_modified_utc', sa.DateTime(timezone=True), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=128), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('image_uri', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_food_category_name'), 'food_category', ['name'], unique=True)
    op.create_table('food_item',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_utc', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_modified_utc', sa.DateTime(timezone=True), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=128), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('serving_size', sqlmodel.sql.sqltypes.AutoString(length=32), nullable=False),
    sa.Column('calories_per_serving', sa.Float(), nullable=False),
    sa.Column('nutrition_content', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('image_uri', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_food_item_name'), 'food_item', ['name'], unique=True)
    op.create_table('food_item_category',
    sa.Column('food_item_id', sa.Uuid(), nullable=False),
    sa.Column('food_category_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['food_category_id'], ['food_category.id'], ),
    sa.ForeignKeyConstraint(['food_item_id'], ['food_item.id'], ),
    sa.PrimaryKeyConstraint('food_item_id', 'food_category_id')
    )
    op.create_table('recipe',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_utc', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_modified_utc', sa.DateTime(timezone=True), nullable=True),
    sa.Column('food_item_id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=128), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('ingredients', postgresql.ARRAY(sa.String(), dimensions=1), nullable=True),
    sa.Column('instructions', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('serving_size', sa.Integer(), nullable=False),
    sa.Column('nutrition_content', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['food_item_id'], ['food_item.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_recipe_name'), 'recipe', ['name'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_recipe_name'), table_name='recipe')
    op.drop_table('recipe')
    op.drop_table('food_item_category')
    op.drop_index(op.f('ix_food_item_name'), table_name='food_item')
    op.drop_table('food_item')
    op.drop_index(op.f('ix_food_category_name'), table_name='food_category')
    op.drop_table('food_category')
    # ### end Alembic commands ###
